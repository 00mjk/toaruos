{"body":"![ToAruOS (logo)](https://github.com/klange/osdev/raw/master/docs/logo.png)\r\n\r\nとあるOS is a toy operating system based loosely on the POSIX standards. The primary goal of the project is for me to learn POSIX from the system side, understanding the design and construction of an operating system on x86 hardware, and build a working implementation of the C standard library. Development of とあるOS was managed by the UIUC [SIGOps](http://www.acm.uiuc.edu/sigops/) until May, 2012. While the ultimate goal is a microkernel, we currently have a relatively monolithic kernel.\r\n\r\n### IRC ###\r\n\r\nFor discussion, help with building or running the OS, and for up-to-date build verification, please join us in `#toaruos` on Freenode.\r\n\r\n## News ##\r\n\r\nFull compositing has been enabled. For opaque windows, it is considerably faster than the old rendering methods. This is not the case for transparent windows, which I am working on. Eventually, blitting of transparent windows will be done with SSE instructions, and should be about as fast as non-transparent windows, at which point transparency may become the default.\r\n\r\n## Features ##\r\n\r\nとあるOS currently supports a number of important operating system concepts and facilities:\r\n\r\n* Processes\r\n  * Preemptive multitasking\r\n  * Kernel threads\r\n* Shared memory\r\n  * Through page table mappings\r\n* POSIX-compliant file operations\r\n* Pipes\r\n  * Backed by ring buffers\r\n* Signals\r\n  * Mostly POSIX-compliant under the loose method\r\n* EXT2 read/write support\r\n  * For IDE devices or SATA devices *operating in IDE compatibility mode*\r\n* PS/2 keyboard/mouse support\r\n  * Of course, what doesn't?\r\n* Graphical features\r\n  * Windows GUI environment with transparency support\r\n  * Limited GUI toolkit available\r\n* Extensive, ANSI-capable terminal\r\n  * Includes extensive compatibility with xterm\r\n  * Support for 256 colors\r\n  * Beautifully rendered anti-aliased text through FreeType (please see the licenses below for included fonts)\r\n  * Supports Unicode text (UTF-8 encoded)\r\n* And dozens of other minor things not worth listing here.\r\n\r\n### Third-Party Software ###\r\n\r\nWhile とあるOS ships with only its own native software tools, we are working on packages for additional third-party software, including:\r\n\r\n* Lua\r\n  * Lua's standalone interpreter has been successfully built and run.\r\n  * Some Lua functionality is currently missing and we are working to solve this.\r\n* Cairo\r\n  * Cairo and its dependencies can be built if care is taken to supply the correct configuration settings.\r\n  * To build pixman, modifications to the `config.h` header must be made to disable global constructors, as these are not currently supported.\r\n\r\n## Screenshots ##\r\n\r\nHere's what とあるOS looks like:\r\n\r\n![Screenshot](http://i.imgur.com/NRUWGl.png)\r\n\r\n(http://i.imgur.com/NRUWG.png)\r\n\r\nHere's what とあるOS has looked like in the past:\r\n\r\n* [Running a Cairo demo](http://i.imgur.com/DQK7P.png)\r\n* [With multiple transparent terminals](http://i.imgur.com/K6nPC.png)\r\n* [A terminal and the native editor](http://i.imgur.com/4SGhd.png)\r\n* [Running the  native editor in a full-screen terminal](http://i.imgur.com/u1DEX.png)\r\n* [Fully userspace shell, demonstrating a threading application](http://i.imgur.com/S7rab.png)\r\n* [Logging in and moving around](http://i.imgur.com/VjTMv.png)\r\n* [Booting up the (WIP) graphical interface](http://i.imgur.com/g2yfr.png)\r\n* [Nyaning](http://i.imgur.com/2BISA.png)\r\n* [Demoing multitasking](http://i.imgur.com/RY4lb.png)\r\n* [Empty kernel shell](http://i.imgur.com/44huV.jpg)\r\n* [With a wallpaper and mouse cursor](http://i.imgur.com/eG0i9.png)\r\n* [Running some GNU apps](http://i.imgur.com/aKyJb.png)\r\n* [Playing a simple RPG](http://i.imgur.com/A7csE.jpg)\r\n* [Generating Julia fractals](http://i.imgur.com/Uy3JJ.jpg)\r\n* [Early boot screen testing and some old serial output](http://i.imgur.com/1CMJ0.jpg)\r\n\r\n## Testing it Out ##\r\nIf you are on Debian/Ubuntu/etc., you can clone the repository and run:\r\n\r\n    ./build.sh\r\n\r\nThis will install the required dependencies, build the userspace libraries and toolchain, build the kernel, and give you a working ramdisk and hard disk.\r\n\r\nYou can then run `make run` or `make kvm` to run QEMU. An additional `make run-config` command is available that allows easy customization of the emulation environment.\r\n\r\nWhile we only officially support QEMU, other environments - including actual hardware - should work given the appropriate tools. If you are eager to try とあるOS from a real machine, please use GRUB 2 and ensure that you provide the correct graphics payload options. In the future, GRUB 2 configurations will be supported with configuration files and build scripts.\r\n\r\n### User Accounts ###\r\n\r\nThe default root password is `toor`. There is also a regular user `local` with password `local`. While general system security is lacking, most system-modifying calls to the kernel require root privileges. When booting directly to a graphical terminal, the system will run in single-user mode and automatically log in as root. When running in graphical or VGA-terminal mode, a login screen is presented.\r\n\r\n## Dependencies ##\r\n\r\n### Kernel ###\r\nTo build the kernel, you will need `yasm`, `clang`, and GNU `ld` (which you undoubtedly have if you have `clang` or `gcc`).\r\n\r\n### Hard disks ###\r\nYou will need `genext2fs` to generate the EXT2 images for the hard disk drive.\r\n\r\n## References ##\r\nHere are some tutorials we found useful early on:\r\n\r\n* [James M's kernel development tutorials](http://www.jamesmolloy.co.uk/tutorial_html/index.html)\r\n* [Bran's Kernel Development Tutorial](http://www.osdever.net/bkerndev/)\r\n* [Skelix's OS tutorial](http://en.skelix.org/skelixos/)\r\n\r\n# License #\r\nThis project is released under the terms of the University of Illinois / NCSA Open Source License, an OSI- and FSF-approved, GPL-compatible open source license. The NCSA License is a derivative of the MIT license and the BSD license; it is reproduced here for your convenience:\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to\r\n    deal with the Software without restriction, including without limitation the\r\n    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n    sell copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n      1. Redistributions of source code must retain the above copyright notice,\r\n         this list of conditions and the following disclaimers.\r\n      2. Redistributions in binary form must reproduce the above copyright\r\n         notice, this list of conditions and the following disclaimers in the\r\n         documentation and/or other materials provided with the distribution.\r\n      3. Neither the names of the ToAruOS Kernel Development Team, Kevin Lange,\r\n         nor the names of its contributors may be used to endorse\r\n         or promote products derived from this Software without specific prior\r\n         written permission.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\r\n    CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n    WITH THE SOFTWARE.\r\n\r\n## Additional License ##\r\n\r\nとあるOS comes packaged with some third-party software under other licenses, which can be viewed in the README.","tagline":"A POSIX-like operating system and userspace.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"とあるOS","google":""}